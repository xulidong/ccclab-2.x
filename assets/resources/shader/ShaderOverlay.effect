// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

// Note: Current format version is experiment, the format may be changed.
// The future format may not be compatible, you may need to update the script manually.

// 注意：当前版本的格式是实验性的，之后还会进行修改。
// 后续版本的格式不保证兼容当前格式，可能需要手动升级到最新版本。，
%{
  techniques: [
    {
      passes: [
        {
          vert: vs
          frag: fs
          cullMode: none
          blend: true
        }
      ]
      layer: 0
    }
  ]
  properties: {
    texture: {
      type: sampler2D
      value: null
    }
    alphaThreshold: {
      type: number
      value: 0.5
    }
  }
%}

%% vs {

precision highp float;

uniform mat4 cc_matViewProj;

#if _USE_MODEL
  uniform mat4 cc_matWorld;
#endif

attribute vec3 a_position;
attribute lowp vec4 a_color;

#if USE_TEXTURE
  attribute mediump vec2 a_uv0;
  varying mediump vec2 v_uv0;
#endif

varying lowp vec4 v_color;

void main () {
  mat4 mvp;
  
  #if _USE_MODEL
    mvp = cc_matViewProj * cc_matWorld;
  #else
    mvp = cc_matViewProj;
  #endif

  #if USE_TEXTURE
    v_uv0 = a_uv0;
  #endif

  v_color = a_color;

  gl_Position = mvp * vec4(a_position, 1);
}

}

%% fs {

precision highp float;

#if USE_TEXTURE
  uniform sampler2D texture;
  varying mediump vec2 v_uv0;
#endif

#include <alpha-test>

varying lowp vec4 v_color;

float format(float x, float y) {
  if (x <= 0.5) {
    return 2.0 * x * y;
  } else {
    return 1.0 - 2.0 * (1.0 - x) * (1.0 - y);
  }
}

void main () {
  vec4 color = v_color;

  #if USE_TEXTURE
    vec4 tc = texture2D(texture, v_uv0);
    #if _USE_ETC1_TEXTURE
      tc.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;
    #endif
    vec4 mc = color;
    mc.r = format(tc.r, v_color.r);
    mc.g = format(tc.g, v_color.g);
    mc.b = format(tc.b, v_color.b);
    color = mc;
  #endif

  ALPHA_TEST(color);

  gl_FragColor = color;
}

}
