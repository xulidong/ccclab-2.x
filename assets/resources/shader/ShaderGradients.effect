// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

// Note: Current format version is experiment, the format may be changed.
// The future format may not be compatible, you may need to update the script manually.

// 注意：当前版本的格式是实验性的，之后还会进行修改。
// 后续版本的格式不保证兼容当前格式，可能需要手动升级到最新版本。，
%{
  techniques: [
    {
      passes: [
        {
          vert: vs
          frag: fs
          cullMode: none
          blend: true
        }
      ]
      layer: 0
    }
  ]
  properties: {
    texture: {
      type: sampler2D
      value: null
    }
    angle: {
      type: float
	  displayName:'角度'
      value: 45
    }
    offset: {
      type: float
	  displayName:'偏移'
      value: 0.0
    }
    uvRatio: {
      type: float
	  displayName:'比例'
      value: 1.0
    }
    beginColor: {
      type: color4
      displayName:'起始颜色'
      value: [0, 0.5, 1, 1]
    }
	endColor: {
      type: color4
      displayName:'结束颜色'
      value: [1, 0, 0, 1]
    }
  }
%}

%% vs {

  precision highp float;
  
  uniform mat4 cc_matViewProj;
  attribute vec3 a_position;
  
  attribute vec2 a_uv0;
  varying vec2 v_uv0;
  
  attribute lowp vec4 a_color;
  varying lowp vec4 v_color;
  void main () {
  	vec4 pos = cc_matViewProj * vec4(a_position, 1);
  	v_uv0 = a_uv0;
    v_color = a_color;
  	gl_Position = pos;
  }

}

%% fs {

  precision highp float;
  
  uniform sampler2D texture;
  varying vec2 v_uv0;
  varying vec4 v_color;
  
  uniform float angle;
  uniform float offset;
  uniform float uvRatio;
  uniform lowp vec4 beginColor;
  uniform lowp vec4 endColor;
  void main () {
	  
  	vec4 color = v_color*texture2D(texture, v_uv0);
  	float angleInRadians = radians(angle); 
  	float ratio = clamp((v_uv0.y * cos(angleInRadians) + v_uv0.x * sin(angleInRadians) + offset) * uvRatio, 0.0, 1.0);
	float beginRatio = 1.0 - ratio;
  	float endRatio = ratio;
  
  	gl_FragColor = vec4(
  		color.r * (beginColor.r * beginRatio + endColor.r * endRatio),
  		color.g * (beginColor.g * beginRatio + endColor.g * endRatio),
  		color.b * (beginColor.b * beginRatio + endColor.b * endRatio),
  		color.a * (beginColor.a * beginRatio + endColor.a * endRatio)
  	);
  }

}
